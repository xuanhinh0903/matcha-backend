{
  "name": "nest-typescript-starter",
  "private": true,
  "version": "1.0.0",
  "description": "Nest TypeScript starter repository",
  "license": "MIT",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/src/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/jest/bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "docker:dev": "docker compose -f docker-compose.dev.yaml up -d",
    "typeorm": "typeorm-ts-node-commonjs",
    "migration:generate": "npx ts-node -P ./tsconfig.json -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:generate -d ./src/config/typeorm.config.ts ./src/database/migrations/migration",
    "migration:create": "npx ts-node -P ./tsconfig.json -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:create ./src/database/migrations/migration",
    "migration:run": "npx ts-node -P ./tsconfig.json -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:run -d ./src/config/typeorm.config.ts",
    "migration:revert": "npx ts-node -P ./tsconfig.json -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:revert -d ./src/config/typeorm.config.ts",
    "seed:db": "npx ts-node -P ./tsconfig.json -r tsconfig-paths/register ./scripts/seed-database.ts",
    "tf:init": "cd infra/terraform && terraform init",
    "tf:plan": "cd infra/terraform && terraform plan",
    "tf:apply": "cd infra/terraform && terraform apply",
    "tf:destroy": "cd infra/terraform && terraform destroy",
    "tf:refresh": "cd infra/terraform && terraform refresh",
    "tf:validate": "cd infra/terraform && terraform validate",
    "infra:store-outputs": "cd infra/terraform && bash store-outputs.sh",
    "infra:get-outputs": "cd infra/terraform && terraform output -json",
    "deploy:build": "docker build -t matcha-backend .",
    "deploy:tag": "aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin $(aws ssm get-parameter --name '/matcha/ecr/repository-url' --query 'Parameter.Value' --output text) && docker tag matcha-backend:latest $(aws ssm get-parameter --name '/matcha/ecr/repository-url' --query 'Parameter.Value' --output text):latest",
    "deploy:push": "docker push $(aws ssm get-parameter --name '/matcha/ecr/repository-url' --query 'Parameter.Value' --output text):latest",
    "deploy:update-service": "aws ecs update-service --cluster $(aws ssm get-parameter --name '/matcha/ecs/cluster-name' --query 'Parameter.Value' --output text) --service $(aws ssm get-parameter --name '/matcha/ecs/service-name' --query 'Parameter.Value' --output text) --force-new-deployment",
    "deploy:full": "npm run deploy:build && npm run deploy:tag && npm run deploy:push && npm run deploy:update-service",
    "aws:create-state-bucket": "aws s3api create-bucket --bucket matcha-terraform-toandev --region ap-southeast-1 --create-bucket-configuration LocationConstraint=ap-southeast-1 && aws s3api put-bucket-versioning --bucket matcha-terraform-toandev --versioning-configuration Status=Enabled",
    "aws:create-lock-table": "aws dynamodb create-table --table-name matcha-terraform-toandev-locks --attribute-definitions AttributeName=LockID,AttributeType=S --key-schema AttributeName=LockID,KeyType=HASH --billing-mode PAY_PER_REQUEST --region ap-southeast-1",
    "aws:get-services": "aws ecs list-services --cluster $(aws ssm get-parameter --name '/matcha/ecs/cluster-name' --query 'Parameter.Value' --output text)",
    "aws:get-task-definition": "aws ecs describe-task-definition --task-definition $(aws ssm get-parameter --name '/matcha/ecs/task-family' --query 'Parameter.Value' --output text)",
    "aws:describe-tasks": "aws ecs describe-tasks --cluster $(aws ssm get-parameter --name '/matcha/ecs/cluster-name' --query 'Parameter.Value' --output text) --tasks $(aws ecs list-tasks --cluster $(aws ssm get-parameter --name '/matcha/ecs/cluster-name' --query 'Parameter.Value' --output text) --service-name $(aws ssm get-parameter --name '/matcha/ecs/service-name' --query 'Parameter.Value' --output text) --query 'taskArns' --output text)",
    "aws:list-parameters": "aws ssm get-parameters-by-path --path '/matcha/' --recursive --query 'Parameters[*].{Name:Name,Value:Value}'",
    "db:connect-tunnel": "echo 'Creating SSH tunnel to RDS via EC2 jump host. Use a different terminal to connect using: psql -h localhost -p 5433 -U postgres' && ssh -i matcha-key.pem -L 5433:$(aws ssm get-parameter --name '/matcha/rds/endpoint' --query 'Parameter.Value' --output text):5432 ec2-user@$(aws ec2 describe-instances --filters 'Name=tag:Name,Values=matcha-jump-host' --query 'Reservations[0].Instances[0].PublicDnsName' --output text)"
  },
  "dependencies": {
    "@elastic/elasticsearch": "^8.15.1",
    "@faker-js/faker": "^9.5.0",
    "@liaoliaots/nestjs-redis": "^10.0.0",
    "@nestjs/cache-manager": "^3.0.1",
    "@nestjs/common": "^10.3.2",
    "@nestjs/config": "^3.2.3",
    "@nestjs/core": "^10.3.2",
    "@nestjs/elasticsearch": "^10.0.2",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/passport": "^10.0.3",
    "@nestjs/platform-express": "^10.3.2",
    "@nestjs/platform-socket.io": "^11.0.11",
    "@nestjs/serve-static": "^5.0.2",
    "@nestjs/swagger": "^8.1.1",
    "@nestjs/typeorm": "^10.0.2",
    "@nestjs/websockets": "10.3.3",
    "@types/aws-sdk": "^2.7.0",
    "@types/bcrypt": "^5.0.2",
    "@types/joi": "^17.2.3",
    "@types/node-geocoder": "^4.2.6",
    "@types/uuid": "^10.0.0",
    "aws-sdk": "^2.1691.0",
    "axios": "^1.8.4",
    "bcrypt": "^5.1.1",
    "cache-manager": "^6.4.1",
    "cache-manager-redis-store": "^3.0.1",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "cloudinary": "^2.5.1",
    "cookie-parser": "^1.4.7",
    "dotenv": "^16.4.7",
    "expo-server-sdk": "^3.14.0",
    "geojson": "^0.5.0",
    "geolib": "^3.3.4",
    "install": "^0.13.0",
    "ioredis": "^5.6.0",
    "joi": "^17.13.3",
    "ms": "^2.1.3",
    "multer": "1.4.5-lts.1",
    "multer-storage-cloudinary": "^4.0.0",
    "node-geocoder": "^4.4.1",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "pg": "^8.13.0",
    "redis": "^4.7.0",
    "reflect-metadata": "^0.2.1",
    "rxjs": "^7.8.1",
    "socket.io": "4.7.4",
    "streamifier": "^0.1.1",
    "typeorm": "^0.3.20",
    "uuid": "^10.0.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.3.1",
    "@nestjs/schematics": "^10.1.0",
    "@nestjs/testing": "^10.3.2",
    "@swc/cli": "^0.3.9",
    "@swc/core": "^1.4.0",
    "@types/cookie-parser": "^1.4.7",
    "@types/express": "^4.17.21",
    "@types/geojson": "^7946.0.16",
    "@types/ioredis": "^5.0.0",
    "@types/jest": "^29.5.12",
    "@types/ms": "^0.7.34",
    "@types/multer": "^1.4.12",
    "@types/node": "^20.11.16",
    "@types/passport-jwt": "^4.0.1",
    "@types/passport-local": "^1.0.38",
    "@types/supertest": "^6.0.2",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "prettier": "^3.2.5",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.4",
    "ts-jest": "^29.1.2",
    "ts-loader": "^9.5.1",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.3.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  },
  "packageManager": "pnpm@8.15.9+sha512.499434c9d8fdd1a2794ebf4552b3b25c0a633abcee5bb15e7b5de90f32f47b513aca98cd5cfd001c31f0db454bc3804edccd578501e4ca293a6816166bbd9f81"
}
